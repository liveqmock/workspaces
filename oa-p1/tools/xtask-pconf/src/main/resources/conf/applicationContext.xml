<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	 http://cxf.apache.org/jaxrs
	 http://cxf.apache.org/schemas/jaxrs.xsd
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<!-- 加载配置文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<!--开发环境下的配置文件 -->
				<value>classpath:mq.properties</value>
				<!-- 生产环境下的配置文件 -->
				<value>file:/var/config/xtask-pconf/mq.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="utf-8" />
	</bean>

	<!-- 配置MQ连接源 -->
	<bean id="rabbitMQSource" class="com.rabbitmq.client.ConnectionFactory">
		<property name="username" value="${mq.username}" />
		<property name="password" value="${mq.password}" />
		<property name="virtualHost" value="${mq.virtualhost}" />
		<property name="host" value="${mq.host}" />
		<property name="port" value="${mq.port}" />
		<property name="requestedHeartbeat" value="5" />
	</bean>

	<bean id="connectionFactory"
		class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">
		<constructor-arg ref="rabbitMQSource" />
		<property name="channelCacheSize" value="${mq.channelcachesize}" />
	</bean>

	<!-- 创建rabbitAdmin 代理类,初始调用initialize,它会指定执行我们定义的Exchange,Queue,Binding -->
	<bean class="org.springframework.amqp.rabbit.core.RabbitAdmin"
		init-method="initialize">
		<constructor-arg ref="connectionFactory" />
	</bean>

	<!-- 声明消息转换器为SimpleMessageConverter -->
	<bean id="messageConverter"
		class="org.springframework.amqp.support.converter.SimpleMessageConverter" />

	<!-- 服务 -->
	<bean id="xtaskService" class="com.iwgame.xengine.xtask.pconf.service.impl.XtaskServiceImpl">
		<property name="pconfFileInfo" value="${pconf.info}"/>
		<property name="productConfiguration" ref="productConfiguration"/>
	</bean>


	<!-- 配置文件生成监听模块-监听生产者发送的消息开始 -->
	<!-- 用于接收消息的处理类 -->
	<bean id="pconfFileProduceTaskHandler"
		class="com.iwgame.xengine.xtask.pconf.worker.PconfFileProduceTask" />

	<!-- 用于消息的监听的代理类MessageListenerAdapter -->
	<bean id="pconfFileProduceTaskListenerAdapter"
		class="org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter">
		<constructor-arg ref="pconfFileProduceTaskHandler" />
		<property name="defaultListenerMethod" value="handleMessage"></property>
		<property name="messageConverter" ref="messageConverter"></property>
	</bean>

	<!-- 用于消息的监听的容器类SimpleMessageListenerContainer，对于queueName的值一定要与定义的Queue的值相同 -->
	<bean
		class="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer">
		<property name="queueNames" value="task.pconf-make-thread.pconfchangenotice.queue"></property>
		<property name="connectionFactory" ref="connectionFactory"></property>
		<property name="messageListener" ref="pconfFileProduceTaskListenerAdapter"></property>
	</bean>
	<!-- 配置文件生成监听模块-监听生产者发送的消息结束 -->


</beans>