#********************************************************************
# Wrapper Java Properties
#********************************************************************
# Java Application
#  Locate the java binary on the system PATH:
wrapper.java.command=java
#  Specify a specific java binary:
#set.JAVA_HOME=/java/path
#wrapper.java.command=%JAVA_HOME%/bin/java

# Tell the Wrapper to log the full generated Java command line.
#wrapper.java.command.loglevel=INFO

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=../lib/wrapper.jar
wrapper.java.classpath.2=../lib/amqp-client-2.5.0.jar
wrapper.java.classpath.3=../lib/aopalliance-1.0.jar
wrapper.java.classpath.4=../lib/c3p0-0.9.1.2.jar
wrapper.java.classpath.5=../lib/commons-beanutils-1.8.0.jar
wrapper.java.classpath.6=../lib/commons-collections-3.2.jar
wrapper.java.classpath.7=../lib/commons-io-2.0.1.jar
wrapper.java.classpath.8=../lib/commons-lang-2.4.jar
wrapper.java.classpath.9=../lib/commons-logging-1.1.1.jar
wrapper.java.classpath.10=../lib/ezmorph-1.0.6.jar
wrapper.java.classpath.11=../lib/iw-security-1.0.jar
wrapper.java.classpath.12=../lib/jasypt-1.7.1.jar
wrapper.java.classpath.13=../lib/json-lib-2.3-jdk15.jar
wrapper.java.classpath.14=../lib/junit-4.8.1.jar
wrapper.java.classpath.15=../lib/log4j-1.2.16.jar
wrapper.java.classpath.16=../lib/log-monitor-task-1.0-SNAPSHOT.jar
wrapper.java.classpath.17=../lib/mybatis-3.0.5.jar
wrapper.java.classpath.18=../lib/mybatis-spring-1.0.1.jar
wrapper.java.classpath.19=../lib/mysql-connector-java-5.1.12.jar
wrapper.java.classpath.20=../lib/quartz-all-1.6.3.jar
wrapper.java.classpath.21=../lib/servlet-api-2.3.jar
wrapper.java.classpath.22=../lib/spring-amqp-1.0.0.RELEASE.jar
wrapper.java.classpath.23=../lib/spring-aop-3.0.5.RELEASE.jar
wrapper.java.classpath.24=../lib/spring-asm-3.0.5.RELEASE.jar
wrapper.java.classpath.25=../lib/spring-beans-3.0.5.RELEASE.jar
wrapper.java.classpath.26=../lib/spring-context-3.0.5.RELEASE.jar
wrapper.java.classpath.27=../lib/spring-context-support-3.0.5.RELEASE.jar
wrapper.java.classpath.28=../lib/spring-core-3.0.5.RELEASE.jar
wrapper.java.classpath.29=../lib/spring-expression-3.0.5.RELEASE.jar
wrapper.java.classpath.30=../lib/spring-jdbc-3.0.5.RELEASE.jar
wrapper.java.classpath.31=../lib/spring-rabbit-1.0.0.RELEASE.jar
wrapper.java.classpath.32=../lib/spring-test-3.0.5.RELEASE.jar
wrapper.java.classpath.33=../lib/spring-tx-3.0.5.RELEASE.jar


# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=../lib

# Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode.
wrapper.java.additional.auto_bits=TRUE

# Java Additional Parameters
wrapper.java.additional.1=-DXTASK_HOME=file:/var/config/log-monitor-task

# Initial Java Heap Size (in MB)
wrapper.java.initmemory=128

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=128

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=com.iwgame.iwcloud.flume.task.TaskStartup
wrapper.app.parameter.2=../conf/log4j.properties

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Enables Debug output from the Wrapper.
# wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=../logs/wrapper_task.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=100m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=1

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper General Properties
#********************************************************************
# Allow for the use of non-contiguous numbered properties
wrapper.ignore_sequence_gaps=TRUE

# Title to use when running as a console
wrapper.console.title=LogMonitorTaskStartup NodeStatusHandler Application

#********************************************************************
# Wrapper JVM Checks
#********************************************************************
# Detect DeadLocked Threads in the JVM. (Requires Standard Edition)
wrapper.check.deadlock=TRUE
wrapper.check.deadlock.interval=10
wrapper.max_failed_invocations=99
wrapper.console.fatal_to_stderr=FALSE
wrapper.console.error_to_stderr=FALSE
wrapper.check.deadlock.action=RESTART
wrapper.check.deadlock.output=FULL

# Out Of Memory detection.
# (Simple match)
wrapper.filter.trigger.1000=java.lang.OutOfMemoryError
# (Only match text in stack traces if -XX:+PrintClassHistogram is being used.)
#wrapper.filter.trigger.1000=Exception in thread "*" java.lang.OutOfMemoryError
#wrapper.filter.allow_wildcards.1000=TRUE
wrapper.filter.action.1000=RESTART
wrapper.filter.message.1000=The JVM has run out of memory.